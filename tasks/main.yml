---
- name: Ensure dependencies are installed
  package:
    name: "{{ item }}"
    update_cache: "{{ mariadb_apt_cache_update }}"
    state: present
  loop: "{{ mariadb_packages_extra + mariadb_requirements }}"

- name: Ensure MariaDB packages are installed
  package:
    name: "{{ item }}"
    update_cache: "{{ mariadb_apt_cache_update }}"
    state: present
  notify: mariadb_stopped
  loop: "{{ mariadb_packages }}"

- name: Ensure MariaDB is stopped after install
  meta: flush_handlers

- name: Get MariaDB version
  command: "{{ mariadb_mysql_binary }} --version"
  register: mariadb_cli_version
  changed_when: False
  check_mode: False

- name: Copy my.cnf global MariaDB configuration
  template:
    src: my.cnf.j2
    dest: "{{ mariadb_config_file }}"
    owner: root
    group: root
    mode: 0644
    force: "{{ mariadb_overwrite_global_mycnf }}"
  notify: mariadb_restart

- name: Verify mariadb include directory exists
  file:
    path: "{{ mariadb_config_include_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755
    setype: mysqld_etc_t
  when: mariadb_config_include_files | length > 0

- name: Copy my.cnf override files into include directory
  template:
    src: "{{ item.src }}"
    dest: "{{ mariadb_config_include_dir }}/{{ item.src | basename }}"
    owner: root
    group: root
    mode: 0644
    force: "{{ item.force | default(False) }}"
  loop: "{{ mariadb_config_include_files }}"
  loop_control:
    label: "{{ mariadb_config_include_dir }}/{{ item.src | basename }}"
  notify: mariadb_restart

- name: Create datadir if it does not exist
  file:
    path: "{{ mariadb_datadir }}"
    state: directory
    owner: mysql
    group: mysql
    mode: 0755
    setype: mysqld_db_t
  when: mariadb_datadir is defined

- name: Create error log file
  file:
    path: "{{ mariadb_log_error }}"
    state: touch
    modification_time: preserve
    access_time: preserve
    owner: mysql
    group: "{{ mariadb_log_file_group }}"
    mode: 0640
    setype: mysqld_log_t
  when: mariadb_log_error is defined

- name: Ensure MariaDB is up and running
  service:
    name: "{{ mariadb_daemon }}"
    state: started
    enabled: "{{ mariadb_enabled_on_startup }}"

- name: Get list of hosts for the root user
  command: '{{ mariadb_mysql_binary }} -NBe
    "SELECT Host
    FROM mysql.user
    WHERE User = ''root''
    ORDER BY (Host=''localhost'') ASC"'
  register: mariadb_root_hosts
  changed_when: False
  check_mode: False

- name: Disallow root login remotely
  mysql_user:
    name: "root"
    host: "{{ item }}"
    state: absent
    login_unix_socket: "{{ mariadb_socket }}"
  when: item not in ['localhost', '127.0.0.1', '::1']
  loop: "{{ mariadb_root_hosts.stdout_lines | default([]) }}"

- name: Update MariaDB root password
  mysql_user:
    name: "root"
    host: "{{ item }}"
    password: "{{ mariadb_root_password }}"
    state: present
    login_unix_socket: "{{ mariadb_socket }}"
  when: item in ['localhost', '127.0.0.1', '::1']
  loop: "{{ mariadb_root_hosts.stdout_lines | default([]) }}"

- name: Copy .my.cnf file with root password credentials
  template:
    src: "root-my.cnf.j2"
    dest: "/root/.my.cnf"
    owner: root
    group: root
    mode: 0600
